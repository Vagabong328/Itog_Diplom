#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cinema_Play
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CinemaPlayBD")]
	public partial class TicketLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertПродажа_билета(Продажа_билета instance);
    partial void UpdateПродажа_билета(Продажа_билета instance);
    partial void DeleteПродажа_билета(Продажа_билета instance);
    #endregion
		
		public TicketLinqDataContext() : 
				base(global::Cinema_Play.Properties.Settings.Default.CinemaPlayBDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TicketLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TicketLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Продажа_билета> Продажа_билета
		{
			get
			{
				return this.GetTable<Продажа_билета>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Продажа билета]")]
	public partial class Продажа_билета : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Код_билета;
		
		private int _Код_сеанса;
		
		private string _Название_зала;
		
		private string _Название_фильма;
		
		private System.Nullable<System.DateTime> _Дата;
		
		private string _Время;
		
		private string _Место;
		
		private string _Ряд;
		
		private string _Цена;
		
		private int _Код_сотрудника;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnКод_билетаChanging(int value);
    partial void OnКод_билетаChanged();
    partial void OnКод_сеансаChanging(int value);
    partial void OnКод_сеансаChanged();
    partial void OnНазвание_залаChanging(string value);
    partial void OnНазвание_залаChanged();
    partial void OnНазвание_фильмаChanging(string value);
    partial void OnНазвание_фильмаChanged();
    partial void OnДатаChanging(System.Nullable<System.DateTime> value);
    partial void OnДатаChanged();
    partial void OnВремяChanging(string value);
    partial void OnВремяChanged();
    partial void OnМестоChanging(string value);
    partial void OnМестоChanged();
    partial void OnРядChanging(string value);
    partial void OnРядChanged();
    partial void OnЦенаChanging(string value);
    partial void OnЦенаChanged();
    partial void OnКод_сотрудникаChanging(int value);
    partial void OnКод_сотрудникаChanged();
    #endregion
		
		public Продажа_билета()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код билета]", Storage="_Код_билета", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Код_билета
		{
			get
			{
				return this._Код_билета;
			}
			set
			{
				if ((this._Код_билета != value))
				{
					this.OnКод_билетаChanging(value);
					this.SendPropertyChanging();
					this._Код_билета = value;
					this.SendPropertyChanged("Код_билета");
					this.OnКод_билетаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сеанса]", Storage="_Код_сеанса", DbType="Int NOT NULL")]
		public int Код_сеанса
		{
			get
			{
				return this._Код_сеанса;
			}
			set
			{
				if ((this._Код_сеанса != value))
				{
					this.OnКод_сеансаChanging(value);
					this.SendPropertyChanging();
					this._Код_сеанса = value;
					this.SendPropertyChanged("Код_сеанса");
					this.OnКод_сеансаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Название зала]", Storage="_Название_зала", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Название_зала
		{
			get
			{
				return this._Название_зала;
			}
			set
			{
				if ((this._Название_зала != value))
				{
					this.OnНазвание_залаChanging(value);
					this.SendPropertyChanging();
					this._Название_зала = value;
					this.SendPropertyChanged("Название_зала");
					this.OnНазвание_залаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Название фильма]", Storage="_Название_фильма", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Название_фильма
		{
			get
			{
				return this._Название_фильма;
			}
			set
			{
				if ((this._Название_фильма != value))
				{
					this.OnНазвание_фильмаChanging(value);
					this.SendPropertyChanging();
					this._Название_фильма = value;
					this.SendPropertyChanged("Название_фильма");
					this.OnНазвание_фильмаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата", DbType="Date")]
		public System.Nullable<System.DateTime> Дата
		{
			get
			{
				return this._Дата;
			}
			set
			{
				if ((this._Дата != value))
				{
					this.OnДатаChanging(value);
					this.SendPropertyChanging();
					this._Дата = value;
					this.SendPropertyChanged("Дата");
					this.OnДатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Время", DbType="NChar(50)")]
		public string Время
		{
			get
			{
				return this._Время;
			}
			set
			{
				if ((this._Время != value))
				{
					this.OnВремяChanging(value);
					this.SendPropertyChanging();
					this._Время = value;
					this.SendPropertyChanged("Время");
					this.OnВремяChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Место", DbType="NChar(50)")]
		public string Место
		{
			get
			{
				return this._Место;
			}
			set
			{
				if ((this._Место != value))
				{
					this.OnМестоChanging(value);
					this.SendPropertyChanging();
					this._Место = value;
					this.SendPropertyChanged("Место");
					this.OnМестоChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ряд", DbType="NChar(50)")]
		public string Ряд
		{
			get
			{
				return this._Ряд;
			}
			set
			{
				if ((this._Ряд != value))
				{
					this.OnРядChanging(value);
					this.SendPropertyChanging();
					this._Ряд = value;
					this.SendPropertyChanged("Ряд");
					this.OnРядChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Цена", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Цена
		{
			get
			{
				return this._Цена;
			}
			set
			{
				if ((this._Цена != value))
				{
					this.OnЦенаChanging(value);
					this.SendPropertyChanging();
					this._Цена = value;
					this.SendPropertyChanged("Цена");
					this.OnЦенаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код сотрудника]", Storage="_Код_сотрудника", DbType="Int NOT NULL")]
		public int Код_сотрудника
		{
			get
			{
				return this._Код_сотрудника;
			}
			set
			{
				if ((this._Код_сотрудника != value))
				{
					this.OnКод_сотрудникаChanging(value);
					this.SendPropertyChanging();
					this._Код_сотрудника = value;
					this.SendPropertyChanged("Код_сотрудника");
					this.OnКод_сотрудникаChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
